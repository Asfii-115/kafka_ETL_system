# docker-compose.yml
version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  cassandra:
    image: cassandra:latest
    ports:
      - "9042:9042"
    environment:
      - CASSANDRA_CLUSTER_NAME=my_cluster
      - CASSANDRA_DC=datacenter1
      - CASSANDRA_ENDPOINT_SNITCH=SimpleSnitch
    volumes:
      - cassandra_data:/var/lib/cassandra

  mysql:
    image: mysql:8.0
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: my_db
      MYSQL_USER: app_user
      MYSQL_PASSWORD: Test_Pass@123
    volumes:
      - mysql_data:/var/lib/mysql

  schema-creator:
    build: .
    depends_on:
      - cassandra
      - mysql
    command: python create_cassandra_schema.py
    environment:
      - CASSANDRA_HOST=cassandra
      - MYSQL_HOST=mysql

  producer:
    build: .
    depends_on:
      - kafka
      - mysql
    command: python producer.py
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - MYSQL_HOST=mysql

  consumer:
    build: .
    depends_on:
      - kafka
      - cassandra
    command: python main_consumer.py
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - CASSANDRA_HOST=cassandra

volumes:
  cassandra_data:
  mysql_data: